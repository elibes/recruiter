name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  client-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: npm run lint | tee lint-report.txt 
      - name: Build
        env:
          CI: false
        run: npm run build
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: client-lint-report
          path: ./client/lint-report.txt
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: client-test-coverage
          path: ./client/coverage

  server-job:
    runs-on: ubuntu-latest
    needs: client-job
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run linter
        run: npm run lint | tee lint-report.txt 
      - name: Build
        env:
          CI: false
        run: npm run build
      - name: Run tests with coverage
        run: npm test -- --coverage
      - name: Upload lint report
        uses: actions/upload-artifact@v3
        with:
          name: server-lint-report
          path: ./server/lint-report.txt
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: server-test-coverage
          path: ./server/coverage

  deploy-client-to-render:
    runs-on: ubuntu-latest
    needs: [client-job, server-job]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy Client to Render
        run: curl -X POST ${{ secrets.RENDER_CLIENT_DEPLOY_HOOK }}

  deploy-server-to-render:
      runs-on: ubuntu-latest
      needs: [server-job, client-job]
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      steps:
        - name: Deploy Server to Render
          run: curl -X POST ${{ secrets.RENDER_SERVER_DEPLOY_HOOK }}
